name: AWS DevOps VM Full Setup

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_DIR: terraform
  

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.ec2.outputs.ec2_ip }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init & Apply
        working-directory: ${{ env.TF_DIR }}
        run: terraform init && terraform apply -auto-approve -var "key_name=${{ secrets.AWS_KEY_NAME }}"

      - name: Save Terraform output
        working-directory: ./terraform/
        run: terraform output -json > tfoutput.json

      - name: Save EC2 Public IP
        id: ec2
        working-directory: ${{ env.TF_DIR }}
        run: |
          EC2_IP=$(terraform output -raw ec2_public_ip)
          echo "EC2_PUBLIC_IP=$EC2_IP" >> $GITHUB_ENV
          echo "::set-output name=ec2_ip::$EC2_IP"


      - name: Upload Terraform output
        uses: actions/upload-artifact@v4
        with:
          name: tfoutput
          path: terraform/tfoutput.json

      - name: Debug EC2 IP
        run: |
          echo "EC2 IP: ${{ env.EC2_IP }}"




  ansible:
    runs-on: ubuntu-latest
    needs: terraform
    env:
      EC2_PUBLIC_IP: ${{ needs.terraform.outputs.ec2_ip }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          

      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip jq
          pip3 install ansible

      - name: Download Terraform output
        uses: actions/download-artifact@v4
        with:
          name: tfoutput
          path: terraform/

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Wait for EC2 SSH to be ready
        run: sleep 30


      - name: Generate Ansible inventory
        run: |
          python3 scripts/tf-to-inventory.py terraform/tfoutput.json > ansible/inventory.ini
          cat ansible/inventory.ini

          
      - name: Run Ansible playbook
        working-directory: ./ansible/
        run: ansible-playbook -i inventory.ini setup_vm.yml --private-key ~/.ssh/id_rsa -vv



      
